
> react-componentes@1.0.0 test /home/vera/Documentos/react-componentes
> jest

  console.log test/waterIrrigation.spec.js:7
    [Function: WaterIndicator]

  console.log test/waterIrrigation.spec.js:11
    [Function: WaterIndicator] '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    [Function: StepsIrrigation] '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Content)',
      WrappedComponent:
       { [Function: Content]
         contextTypes: { theme: [Function] },
         propTypes:
          { disableKBDismissScroll: [Function],
            keyboardShouldPersistTaps: [Function],
            padder: [Function],
            style: [Function] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Content]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { disableKBDismissScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardShouldPersistTaps:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         padder:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: _class]
      displayName: 'KeyboardAwareScrollViewMock',
      propTypes:
       { viewIsInsideTabBar:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         resetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableResetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableAutomaticScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraScrollHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardOpeningTime:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         update:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         contentContainerStyle:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableOnAndroid:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         innerRef:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps:
       { enableAutomaticScroll: true,
         extraHeight: 75,
         extraScrollHeight: 0,
         enableResetScrollToCoords: true,
         keyboardOpeningTime: 250,
         viewIsInsideTabBar: false,
         enableOnAndroid: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    [Function: ScrollViewMock] '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'RCTScrollView' } '\n'

  console.log test/waterIrrigation.spec.js:11
    RCTScrollView 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Content)',
      WrappedComponent:
       { [Function: Content]
         contextTypes: { theme: [Function] },
         propTypes:
          { disableKBDismissScroll: [Function],
            keyboardShouldPersistTaps: [Function],
            padder: [Function],
            style: [Function] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Content]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { disableKBDismissScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardShouldPersistTaps:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         padder:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: _class]
      displayName: 'KeyboardAwareScrollViewMock',
      propTypes:
       { viewIsInsideTabBar:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         resetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableResetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableAutomaticScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraScrollHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardOpeningTime:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         update:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         contentContainerStyle:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableOnAndroid:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         innerRef:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps:
       { enableAutomaticScroll: true,
         extraHeight: 75,
         extraScrollHeight: 0,
         enableResetScrollToCoords: true,
         keyboardOpeningTime: 250,
         viewIsInsideTabBar: false,
         enableOnAndroid: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    [Function: ScrollViewMock] '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'RCTScrollView' } '\n'

  console.log test/waterIrrigation.spec.js:11
    RCTScrollView 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Content)',
      WrappedComponent:
       { [Function: Content]
         contextTypes: { theme: [Function] },
         propTypes:
          { disableKBDismissScroll: [Function],
            keyboardShouldPersistTaps: [Function],
            padder: [Function],
            style: [Function] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Content]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { disableKBDismissScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardShouldPersistTaps:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         padder:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: _class]
      displayName: 'KeyboardAwareScrollViewMock',
      propTypes:
       { viewIsInsideTabBar:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         resetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableResetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableAutomaticScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraScrollHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardOpeningTime:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         update:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         contentContainerStyle:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableOnAndroid:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         innerRef:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps:
       { enableAutomaticScroll: true,
         extraHeight: 75,
         extraScrollHeight: 0,
         enableResetScrollToCoords: true,
         keyboardOpeningTime: 250,
         viewIsInsideTabBar: false,
         enableOnAndroid: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    [Function: ScrollViewMock] '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'RCTScrollView' } '\n'

  console.log test/waterIrrigation.spec.js:11
    RCTScrollView 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Content)',
      WrappedComponent:
       { [Function: Content]
         contextTypes: { theme: [Function] },
         propTypes:
          { disableKBDismissScroll: [Function],
            keyboardShouldPersistTaps: [Function],
            padder: [Function],
            style: [Function] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Content]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { disableKBDismissScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardShouldPersistTaps:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         padder:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: _class]
      displayName: 'KeyboardAwareScrollViewMock',
      propTypes:
       { viewIsInsideTabBar:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         resetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableResetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableAutomaticScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraScrollHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardOpeningTime:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         update:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         contentContainerStyle:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableOnAndroid:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         innerRef:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps:
       { enableAutomaticScroll: true,
         extraHeight: 75,
         extraScrollHeight: 0,
         enableResetScrollToCoords: true,
         keyboardOpeningTime: 250,
         viewIsInsideTabBar: false,
         enableOnAndroid: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    [Function: ScrollViewMock] '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'RCTScrollView' } '\n'

  console.log test/waterIrrigation.spec.js:11
    RCTScrollView 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Content)',
      WrappedComponent:
       { [Function: Content]
         contextTypes: { theme: [Function] },
         propTypes:
          { disableKBDismissScroll: [Function],
            keyboardShouldPersistTaps: [Function],
            padder: [Function],
            style: [Function] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Content]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { disableKBDismissScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardShouldPersistTaps:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         padder:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: _class]
      displayName: 'KeyboardAwareScrollViewMock',
      propTypes:
       { viewIsInsideTabBar:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         resetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableResetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableAutomaticScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraScrollHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardOpeningTime:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         update:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         contentContainerStyle:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableOnAndroid:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         innerRef:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps:
       { enableAutomaticScroll: true,
         extraHeight: 75,
         extraScrollHeight: 0,
         enableResetScrollToCoords: true,
         keyboardOpeningTime: 250,
         viewIsInsideTabBar: false,
         enableOnAndroid: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    [Function: ScrollViewMock] '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'RCTScrollView' } '\n'

  console.log test/waterIrrigation.spec.js:11
    RCTScrollView 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Content)',
      WrappedComponent:
       { [Function: Content]
         contextTypes: { theme: [Function] },
         propTypes:
          { disableKBDismissScroll: [Function],
            keyboardShouldPersistTaps: [Function],
            padder: [Function],
            style: [Function] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Content]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { disableKBDismissScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardShouldPersistTaps:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         padder:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: _class]
      displayName: 'KeyboardAwareScrollViewMock',
      propTypes:
       { viewIsInsideTabBar:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         resetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableResetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableAutomaticScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraScrollHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardOpeningTime:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         update:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         contentContainerStyle:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableOnAndroid:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         innerRef:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps:
       { enableAutomaticScroll: true,
         extraHeight: 75,
         extraScrollHeight: 0,
         enableResetScrollToCoords: true,
         keyboardOpeningTime: 250,
         viewIsInsideTabBar: false,
         enableOnAndroid: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    [Function: ScrollViewMock] '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'RCTScrollView' } '\n'

  console.log test/waterIrrigation.spec.js:11
    RCTScrollView 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Content)',
      WrappedComponent:
       { [Function: Content]
         contextTypes: { theme: [Function] },
         propTypes:
          { disableKBDismissScroll: [Function],
            keyboardShouldPersistTaps: [Function],
            padder: [Function],
            style: [Function] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Content]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { disableKBDismissScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardShouldPersistTaps:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         padder:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: _class]
      displayName: 'KeyboardAwareScrollViewMock',
      propTypes:
       { viewIsInsideTabBar:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         resetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableResetScrollToCoords:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableAutomaticScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         extraScrollHeight:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         keyboardOpeningTime:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onScroll:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         update:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         contentContainerStyle:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         enableOnAndroid:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         innerRef:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidShow:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidHide:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardWillChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onKeyboardDidChangeFrame:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps:
       { enableAutomaticScroll: true,
         extraHeight: 75,
         extraScrollHeight: 0,
         enableResetScrollToCoords: true,
         keyboardOpeningTime: 250,
         viewIsInsideTabBar: false,
         enableOnAndroid: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    [Function: ScrollViewMock] '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'RCTScrollView' } '\n'

  console.log test/waterIrrigation.spec.js:11
    RCTScrollView 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component] displayName: 'View' } '\n'

  console.log test/waterIrrigation.spec.js:11
    View 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:11
    { [Function: StyledComponent]
      contextTypes:
       { theme:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      childContextTypes:
       { parentPath:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      propTypes:
       { style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         styleName:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         virtual:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { virtual: undefined },
      displayName: 'Styled(Text)',
      WrappedComponent:
       { [Function: Text]
         propTypes:
          { ellipsizeMode: [Function],
            numberOfLines: [Function],
            textBreakStrategy: [Function],
            onLayout: [Function],
            onPress: [Function],
            onLongPress: [Function],
            pressRetentionOffset: [Function],
            selectable: [Function],
            selectionColor: [Function],
            suppressHighlighting: [Function],
            style: [Function],
            testID: [Function],
            nativeID: [Function],
            allowFontScaling: [Function],
            maxFontSizeMultiplier: [Function],
            accessible: [Function],
            adjustsFontSizeToFit: [Function],
            minimumFontScale: [Function],
            disabled: [Function],
            dataDetectorType: [Function],
            uppercase: [Function] },
         defaultProps: { uppercase: false } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Text]
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         uppercase:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } },
      defaultProps: { uppercase: false } } '\n'

  console.log test/waterIrrigation.spec.js:11
    { [Function: Component]
      displayName: 'Text',
      '$$typeof': Symbol(react.forward_ref),
      render: [Function: Text],
      propTypes:
       { ellipsizeMode:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         numberOfLines:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         textBreakStrategy:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLayout:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         onLongPress:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         pressRetentionOffset:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectable:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         selectionColor:
          { [Function: bound colorPropType] isRequired: [Function: bound colorPropType] },
         suppressHighlighting:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         style: [Function],
         testID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         nativeID:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         allowFontScaling:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         maxFontSizeMultiplier:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         accessible:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         adjustsFontSizeToFit:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         minimumFontScale:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         disabled:
          { [Function: bound checkType] isRequired: [Function: bound checkType] },
         dataDetectorType:
          { [Function: bound checkType] isRequired: [Function: bound checkType] } } } '\n'

  console.log test/waterIrrigation.spec.js:11
    Text 
    

  console.log test/waterIrrigation.spec.js:12
    [Function: findAll]

