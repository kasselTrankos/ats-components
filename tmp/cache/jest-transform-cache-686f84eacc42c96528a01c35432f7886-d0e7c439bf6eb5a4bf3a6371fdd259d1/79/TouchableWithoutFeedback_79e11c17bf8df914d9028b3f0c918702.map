{"version":3,"sources":["TouchableWithoutFeedback.js"],"names":["DeprecatedEdgeInsetsPropType","require","React","PropTypes","Touchable","View","createReactClass","ensurePositiveDelayProps","DeprecatedAccessibilityRoles","PRESS_RETENTION_OFFSET","top","left","right","bottom","OVERRIDE_PROPS","TouchableWithoutFeedback","displayName","mixins","Mixin","propTypes","accessible","bool","accessibilityLabel","node","accessibilityHint","string","accessibilityIgnoresInvertColors","accessibilityRole","oneOf","accessibilityStates","array","accessibilityState","object","accessibilityActions","onAccessibilityAction","func","onFocus","onBlur","disabled","onPress","onPressIn","onPressOut","onLayout","touchSoundDisabled","onLongPress","nativeID","testID","delayPressIn","number","delayPressOut","delayLongPress","pressRetentionOffset","hitSlop","getInitialState","touchableGetInitialState","componentDidMount","props","UNSAFE_componentWillReceiveProps","nextProps","touchableHandlePress","e","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandleLongPress","touchableGetPressRectOffset","touchableGetHitSlop","touchableGetHighlightDelayMS","touchableGetLongPressDelayMS","touchableGetPressOutDelayMS","render","child","Children","only","children","TOUCH_TARGET_DEBUG","type","toArray","push","renderDebugView","color","overrides","prop","undefined","cloneElement","focusable","onClick","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst DeprecatedEdgeInsetsPropType = require('../../DeprecatedPropTypes/DeprecatedEdgeInsetsPropType');\nconst React = require('react');\nconst PropTypes = require('prop-types');\nconst Touchable = require('./Touchable');\nconst View = require('../View/View');\n\nconst createReactClass = require('create-react-class');\nconst ensurePositiveDelayProps = require('./ensurePositiveDelayProps');\n\nconst {\n  DeprecatedAccessibilityRoles,\n} = require('../../DeprecatedPropTypes/DeprecatedViewAccessibility');\n\nimport type {\n  SyntheticEvent,\n  LayoutEvent,\n  PressEvent,\n} from '../../Types/CoreEventTypes';\nimport type {EdgeInsetsProp} from '../../StyleSheet/EdgeInsetsPropType';\nimport type {\n  AccessibilityRole,\n  AccessibilityStates,\n  AccessibilityState,\n  AccessibilityActionInfo,\n  AccessibilityActionEvent,\n} from '../View/ViewAccessibility';\n\ntype TargetEvent = SyntheticEvent<\n  $ReadOnly<{|\n    target: number,\n  |}>,\n>;\n\ntype BlurEvent = TargetEvent;\ntype FocusEvent = TargetEvent;\n\nconst PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\nconst OVERRIDE_PROPS = [\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityIgnoresInvertColors',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityState',\n  'accessibilityActions',\n  'onAccessibilityAction',\n  'hitSlop',\n  'nativeID',\n  'onBlur',\n  'onFocus',\n  'onLayout',\n  'testID',\n];\n\nexport type Props = $ReadOnly<{|\n  accessible?: ?boolean,\n  accessibilityLabel?: ?Stringish,\n  accessibilityHint?: ?Stringish,\n  accessibilityIgnoresInvertColors?: ?boolean,\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityStates?: ?AccessibilityStates,\n  accessibilityState?: ?AccessibilityState,\n  accessibilityActions?: ?$ReadOnlyArray<AccessibilityActionInfo>,\n  children?: ?React.Node,\n  delayLongPress?: ?number,\n  delayPressIn?: ?number,\n  delayPressOut?: ?number,\n  disabled?: ?boolean,\n  hitSlop?: ?EdgeInsetsProp,\n  nativeID?: ?string,\n  touchSoundDisabled?: ?boolean,\n  onBlur?: ?(e: BlurEvent) => void,\n  onFocus?: ?(e: FocusEvent) => void,\n  onLayout?: ?(event: LayoutEvent) => mixed,\n  onLongPress?: ?(event: PressEvent) => mixed,\n  onPress?: ?(event: PressEvent) => mixed,\n  onPressIn?: ?(event: PressEvent) => mixed,\n  onPressOut?: ?(event: PressEvent) => mixed,\n  onAccessibilityAction?: ?(event: AccessibilityActionEvent) => void,\n  pressRetentionOffset?: ?EdgeInsetsProp,\n  rejectResponderTermination?: ?boolean,\n  testID?: ?string,\n|}>;\n\n/**\n * Do not use unless you have a very good reason. All elements that\n * respond to press should have a visual feedback when touched.\n *\n * TouchableWithoutFeedback supports only one child.\n * If you wish to have several child components, wrap them in a View.\n */\nconst TouchableWithoutFeedback = ((createReactClass({\n  displayName: 'TouchableWithoutFeedback',\n  mixins: [Touchable.Mixin],\n\n  propTypes: {\n    accessible: PropTypes.bool,\n    accessibilityLabel: PropTypes.node,\n    accessibilityHint: PropTypes.string,\n    accessibilityIgnoresInvertColors: PropTypes.bool,\n    accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),\n    accessibilityStates: PropTypes.array,\n    accessibilityState: PropTypes.object,\n    accessibilityActions: PropTypes.array,\n    onAccessibilityAction: PropTypes.func,\n    /**\n     * When `accessible` is true (which is the default) this may be called when\n     * the OS-specific concept of \"focus\" occurs. Some platforms may not have\n     * the concept of focus.\n     */\n    onFocus: PropTypes.func,\n    /**\n     * When `accessible` is true (which is the default) this may be called when\n     * the OS-specific concept of \"blur\" occurs, meaning the element lost focus.\n     * Some platforms may not have the concept of blur.\n     */\n    onBlur: PropTypes.func,\n    /**\n     * If true, disable all interactions for this component.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Called when the touch is released, but not if cancelled (e.g. by a scroll\n     * that steals the responder lock).\n     */\n    onPress: PropTypes.func,\n    /**\n     * Called as soon as the touchable element is pressed and invoked even before onPress.\n     * This can be useful when making network requests.\n     */\n    onPressIn: PropTypes.func,\n    /**\n     * Called as soon as the touch is released even before onPress.\n     */\n    onPressOut: PropTypes.func,\n    /**\n     * Invoked on mount and layout changes with\n     *\n     *   `{nativeEvent: {layout: {x, y, width, height}}}`\n     */\n    onLayout: PropTypes.func,\n    /**\n     * If true, doesn't play system sound on touch (Android Only)\n     **/\n    touchSoundDisabled: PropTypes.bool,\n\n    onLongPress: PropTypes.func,\n\n    nativeID: PropTypes.string,\n    testID: PropTypes.string,\n\n    /**\n     * Delay in ms, from the start of the touch, before onPressIn is called.\n     */\n    delayPressIn: PropTypes.number,\n    /**\n     * Delay in ms, from the release of the touch, before onPressOut is called.\n     */\n    delayPressOut: PropTypes.number,\n    /**\n     * Delay in ms, from onPressIn, before onLongPress is called.\n     */\n    delayLongPress: PropTypes.number,\n    /**\n     * When the scroll view is disabled, this defines how far your touch may\n     * move off of the button, before deactivating the button. Once deactivated,\n     * try moving it back and you'll see that the button is once again\n     * reactivated! Move it back and forth several times while the scroll view\n     * is disabled. Ensure you pass in a constant to reduce memory allocations.\n     */\n    pressRetentionOffset: DeprecatedEdgeInsetsPropType,\n    /**\n     * This defines how far your touch can start away from the button. This is\n     * added to `pressRetentionOffset` when moving off of the button.\n     * ** NOTE **\n     * The touch area never extends past the parent view bounds and the Z-index\n     * of sibling views always takes precedence if a touch hits two overlapping\n     * views.\n     */\n    hitSlop: DeprecatedEdgeInsetsPropType,\n  },\n\n  getInitialState: function() {\n    return this.touchableGetInitialState();\n  },\n\n  componentDidMount: function() {\n    ensurePositiveDelayProps(this.props);\n  },\n\n  UNSAFE_componentWillReceiveProps: function(nextProps: Object) {\n    ensurePositiveDelayProps(nextProps);\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandlePress: function(e: PressEvent) {\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleActivePressIn: function(e: PressEvent) {\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: PressEvent) {\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandleLongPress: function(e: PressEvent) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function(): typeof PRESS_RETENTION_OFFSET {\n    // $FlowFixMe Invalid prop usage\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function(): ?Object {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function(): number {\n    return this.props.delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS: function(): number {\n    return this.props.delayLongPress === 0\n      ? 0\n      : this.props.delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS: function(): number {\n    return this.props.delayPressOut || 0;\n  },\n\n  render: function(): React.Element<any> {\n    // Note(avik): remove dynamic typecast once Flow has been upgraded\n    // $FlowFixMe(>=0.41.0)\n    const child = React.Children.only(this.props.children);\n    let children = child.props.children;\n    if (Touchable.TOUCH_TARGET_DEBUG && child.type === View) {\n      children = React.Children.toArray(children);\n      children.push(\n        Touchable.renderDebugView({color: 'red', hitSlop: this.props.hitSlop}),\n      );\n    }\n\n    const overrides = {};\n    for (const prop of OVERRIDE_PROPS) {\n      if (this.props[prop] !== undefined) {\n        overrides[prop] = this.props[prop];\n      }\n    }\n\n    return (React: any).cloneElement(child, {\n      ...overrides,\n      accessible: this.props.accessible !== false,\n      focusable:\n        this.props.focusable !== false && this.props.onPress !== undefined,\n      onClick: this.touchableHandlePress,\n      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,\n      onResponderTerminationRequest: this\n        .touchableHandleResponderTerminationRequest,\n      onResponderGrant: this.touchableHandleResponderGrant,\n      onResponderMove: this.touchableHandleResponderMove,\n      onResponderRelease: this.touchableHandleResponderRelease,\n      onResponderTerminate: this.touchableHandleResponderTerminate,\n      children,\n    });\n  },\n}): any): React.ComponentType<Props>);\n\nmodule.exports = TouchableWithoutFeedback;\n"]}