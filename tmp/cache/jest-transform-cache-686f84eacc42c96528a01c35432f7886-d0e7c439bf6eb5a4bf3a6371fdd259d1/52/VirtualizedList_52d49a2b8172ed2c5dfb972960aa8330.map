{"version":3,"sources":["VirtualizedList.js"],"names":["Batchinator","require","FillRateHelper","PropTypes","React","ReactNative","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","infoLog","invariant","warning","computeWindowedRenderLimits","_usedIndexForKey","_keylessItemComponentName","VirtualizedList","params","animated","veryLast","props","getItemCount","data","frame","_getFrameMetricsApprox","offset","Math","max","length","_footerLength","_scrollMetrics","visibleLength","_scrollRef","scrollTo","horizontal","x","y","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","item","getItem","itemCount","scrollToIndex","_nestedChildLists","forEach","childList","ref","recordInteraction","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","virtualizedList","getScrollMetrics","_getScrollMetrics","getOutermostParentListRef","_getOutermostParentListRef","getNestedChildState","_getNestedChildState","registerAsNestedChild","_registerAsNestedChild","unregisterAsNestedChild","_unregisterAsNestedChild","context","virtualizedCell","cellKey","_hasMore","_isNestedWithSameOrientation","key","existingChildData","get","state","childListsInCell","_cellKeysToChildListKeys","Set","add","set","console","error","_hasInteracted","_onUpdateSeparators","keys","newProps","_cellRefs","updateSeparatorProps","Map","_fillRateHelper","_frames","_hasDataChangedSinceEndReached","_hasDoneInitialScroll","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","timestamp","velocity","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_updateCellsToRenderBatcher","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","contentOffset","perf","prevDt","activate","_computeBlankness","_onScrollBeginDrag","tuple","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","distanceFromEnd","renderAhead","maxToRenderPerBatch","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","_createViewToken","isViewable","keyExtractor","_getFrameMetrics","__DEV__","frameType","shape","number","isRequired","checkPropTypes","__isNative","windowSize","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","initialNumToRender","storedState","listKey","_getCellKey","frames","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","has","undefined","_onCellLayout","disableVirtualization","nestedContext","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","warn","lastFrame","endFrame","tailSpacerLength","cloneElement","event","style","ListFooterComponentStyle","scrollProps","scrollEventThrottle","invertStickyHeaders","innerRet","renderScrollComponent","ret","scrollContext","nesting","debug","_renderDebugOverlay","prevProps","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","measureLayout","getNativeScrollRef","scrollMetrics","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","onEndReached","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","prevState","PureComponent","defaultProps","id","type","displayName","String","contextTypes","string","func","bool","childContextTypes","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","renderItem","ListItemComponent","createElement","separators","fillRateHelper","parentProps","_renderElement","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","Component","VirtualizedCellWrapper","children","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst Batchinator = require('../Interaction/Batchinator');\nconst FillRateHelper = require('./FillRateHelper');\nconst PropTypes = require('prop-types');\nconst React = require('react');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst RefreshControl = require('../Components/RefreshControl/RefreshControl');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\nconst ViewabilityHelper = require('./ViewabilityHelper');\n\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\nconst warning = require('fbjs/lib/warning');\n\nconst {computeWindowedRenderLimits} = require('./VirtualizeUtils');\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from './ViewabilityHelper';\n\ntype Item = any;\n\nexport type Separators = {\n  highlight: () => void,\n  unhighlight: () => void,\n  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n};\n\nexport type RenderItemProps<ItemT> = {\n  item: ItemT,\n  index: number,\n  separators: Separators,\n};\n\nexport type RenderItemType<ItemT> = (\n  info: RenderItemProps<ItemT>,\n) => React.Node;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n};\n\ntype RequiredProps = {\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n};\ntype OptionalProps = {\n  // TODO: Conflicts with the optional `renderItem` in\n  // `VirtualizedSectionList`'s props.\n  renderItem?: $FlowFixMe<?RenderItemType<Item>>,\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {length: number, offset: number, index: number}, // e.g. height, y\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender: number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Each data item is rendered using this element. Can be a React Component Class,\n   * or a render function.\n   */\n  ListItemComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness may suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch: number,\n  onEndReached?: ?(info: {distanceFromEnd: number}) => void,\n  onEndReachedThreshold?: ?number, // units of visible length\n  onLayout?: ?Function,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?Function,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   * @platform android\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod: number,\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize: number,\n};\n/* $FlowFixMe - this Props seems to be missing a bunch of stuff. Remove this\n * comment to see the errors */\nexport type Props = RequiredProps & OptionalProps;\n\ntype DefaultProps = {|\n  disableVirtualization: boolean,\n  horizontal: boolean,\n  initialNumToRender: number,\n  keyExtractor: (item: Item, index: number) => string,\n  maxToRenderPerBatch: number,\n  onEndReachedThreshold: number,\n  scrollEventThrottle: number,\n  updateCellsBatchingPeriod: number,\n  windowSize: number,\n|};\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype Frame = {\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n};\n\ntype ChildListState = {\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame},\n};\n\ntype State = {first: number, last: number};\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](/react-native/docs/flatlist.html)\n * and [`<SectionList>`](/react-native/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  props: Props;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} but maximum is ${getItemCount(\n        data,\n      ) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number}) {\n    const {animated, offset} = params;\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): any {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): any {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef(): any {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  static defaultProps: DefaultProps = {\n    disableVirtualization: false,\n    horizontal: false,\n    initialNumToRender: 10,\n    keyExtractor: (item: Item, index: number) => {\n      if (item.key != null) {\n        return item.key;\n      }\n      if (item.id != null) {\n        return item.id;\n      }\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n      return String(index);\n    },\n    maxToRenderPerBatch: 10,\n    onEndReachedThreshold: 2, // multiples of length\n    scrollEventThrottle: 50,\n    updateCellsBatchingPeriod: 50,\n    windowSize: 21, // multiples of length\n  };\n\n  static contextTypes:\n    | any\n    | {|\n        virtualizedCell: {|\n          cellKey: React$PropType$Primitive<string>,\n        |},\n        virtualizedList: {|\n          getScrollMetrics: React$PropType$Primitive<Function>,\n          horizontal: React$PropType$Primitive<boolean>,\n          getOutermostParentListRef: React$PropType$Primitive<Function>,\n          getNestedChildState: React$PropType$Primitive<Function>,\n          registerAsNestedChild: React$PropType$Primitive<Function>,\n          unregisterAsNestedChild: React$PropType$Primitive<Function>,\n        |},\n      |} = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  static childContextTypes:\n    | any\n    | {|\n        getScrollMetrics: React$PropType$Primitive<Function>,\n        horizontal: React$PropType$Primitive<boolean>,\n        getOutermostParentListRef: React$PropType$Primitive<Function>,\n        getNestedChildState: React$PropType$Primitive<Function>,\n        registerAsNestedChild: React$PropType$Primitive<Function>,\n        unregisterAsNestedChild: React$PropType$Primitive<Function>,\n      |} = {\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  getChildContext(): {|\n    virtualizedList: {\n      getScrollMetrics: () => {\n        contentLength: number,\n        dOffset: number,\n        dt: number,\n        offset: number,\n        timestamp: number,\n        velocity: number,\n        visibleLength: number,\n      },\n      horizontal: ?boolean,\n      getOutermostParentListRef: Function,\n      getNestedChildState: string => ?ChildListState,\n      registerAsNestedChild: ({\n        cellKey: string,\n        key: string,\n        ref: VirtualizedList,\n      }) => ?ChildListState,\n      unregisterAsNestedChild: ({\n        key: string,\n        state: ChildListState,\n      }) => void,\n    },\n  |} {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n      },\n    };\n  }\n\n  _getCellKey(): string {\n    return (\n      (this.context.virtualizedCell && this.context.virtualizedCell.cellKey) ||\n      'rootList'\n    );\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.virtualizedList.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.',\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props, context: Object) {\n    super(props, context);\n    invariant(\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n\n    invariant(\n      props.windowSize > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) + this.props.initialNumToRender,\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.virtualizedList.getNestedChildState(\n        this.props.listKey || this._getCellKey(),\n      );\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this.props.listKey || this._getCellKey(),\n        ref: this,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this.props.listKey || this._getCellKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    const {data, getItemCount, maxToRenderPerBatch} = newProps;\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n      keyExtractor,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context.virtualizedList;\n    return !!(\n      nestedContext && !!nestedContext.horizontal === !!this.props.horizontal\n    );\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(\n        flatStyles == null || flatStyles.flexWrap !== 'wrap',\n        '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n          'Consider using `numColumns` with `FlatList` instead.',\n      );\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? this.props.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = !horizontal ? 'height' : 'width';\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : this.props.initialNumToRender - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(\n            inversionStyle,\n            element.props.style,\n          ),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-footer'}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle, // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n    };\n    if (inversionStyle) {\n      /* $FlowFixMe(>=0.70.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.70 was deployed. To see the error delete\n       * this comment and run Flow. */\n      scrollProps.style = [inversionStyle, this.props.style];\n    }\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const innerRet = React.cloneElement(\n      (this.props.renderScrollComponent || this._defaultRenderScrollComponent)(\n        scrollProps,\n      ),\n      {\n        ref: this._captureScrollRef,\n      },\n      cells,\n    );\n    let ret = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal === !this.props.horizontal &&\n              !this._hasWarned.nesting &&\n              this.context.virtualizedList == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.warn(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation - use another VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      this._hasDataChangedSinceEndReached = true;\n\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDataChangedSinceEndReached = true;\n  _hasDoneInitialScroll = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {ref: ?VirtualizedList, state: ?ChildListState},\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing) +\n          '`',\n      );\n      return (\n        // $FlowFixMe Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.virtualizedList\n          .getOutermostParentListRef()\n          .getScrollRef()\n          .getNativeScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.virtualizedList.getScrollMetrics(),\n          );\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _onLayoutFooter = e => {\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(metrics: $ReadOnly<{height: number, width: number}>): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics: $ReadOnly<{x: number, y: number}>): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      distanceFromEnd < onEndReachedThreshold * visibleLength &&\n      (this._hasDataChangedSinceEndReached ||\n        this._scrollMetrics.contentLength !== this._sentEndForContentLength)\n    ) {\n      // Only call onEndReached once for a given dataset + content length.\n      this._hasDataChangedSinceEndReached = false;\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      this.scrollToIndex({\n        animated: false,\n        index: this.props.initialScrollIndex,\n      });\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      (this.props.onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {data, getItemCount, onEndReachedThreshold} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (this._scrollMetrics.visibleLength) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props,\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const {contentLength, offset, visibleLength} = this._scrollMetrics;\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? this.props.maxToRenderPerBatch\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem, keyExtractor} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {length: number, offset: number} => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n  } => {\n    const {\n      data,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      keyExtractor,\n    } = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n        if (__DEV__) {\n          const frameType = PropTypes.shape({\n            length: PropTypes.number.isRequired,\n            offset: PropTypes.number.isRequired,\n            index: PropTypes.number.isRequired,\n          }).isRequired;\n          PropTypes.checkPropTypes(\n            {frame: frameType},\n            {frame},\n            'frame',\n            'VirtualizedList.getItemLayout',\n          );\n        }\n      }\n    }\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\ntype CellRendererProps = {\n  CellRendererComponent?: ?React.ComponentType<any>,\n  ItemSeparatorComponent: ?React.ComponentType<*>,\n  cellKey: string,\n  fillRateHelper: FillRateHelper,\n  horizontal: ?boolean,\n  index: number,\n  inversionStyle: ViewStyleProp,\n  item: Item,\n  onLayout: (event: Object) => void, // This is extracted by ScrollViewStickyHeader\n  onUnmount: (cellKey: string) => void,\n  onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n  parentProps: {\n    getItemLayout?: ?Function,\n    renderItem?: ?RenderItemType<Item>,\n    ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  },\n  prevCellKey: ?string,\n};\n\ntype CellRendererState = {\n  separatorProps: $ReadOnly<{|\n    highlighted: boolean,\n    leadingItem: ?Item,\n  |}>,\n};\n\nclass CellRenderer extends React.Component<\n  CellRendererProps,\n  CellRendererState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  static getDerivedStateFromProps(\n    props: CellRendererProps,\n    prevState: CellRendererState,\n  ): ?CellRendererState {\n    return {\n      separatorProps: {\n        ...prevState.separatorProps,\n        leadingItem: props.item,\n      },\n    };\n  }\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn(\n        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +\n          ' precedence over renderItem.',\n      );\n    }\n\n    if (ListItemComponent) {\n      return React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    invariant(\n      false,\n      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',\n    );\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout, ListItemComponent} = parentProps;\n    const element = this._renderElement(\n      renderItem,\n      ListItemComponent,\n      item,\n      index,\n    );\n\n    const onLayout =\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    if (!CellRendererComponent) {\n      return (\n        /* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.89 was deployed. To see the error, delete\n         * this comment and run Flow. */\n        <View style={cellStyle} onLayout={onLayout}>\n          {element}\n          {itemSeparator}\n        </View>\n      );\n    }\n    return (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n  }\n}\n\nclass VirtualizedCellWrapper extends React.Component<{\n  cellKey: string,\n  children: React.Node,\n}> {\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse',\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"]}