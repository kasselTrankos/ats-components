deedcb383a309c1fc4f55de93e3a21f6
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WaterIndicator = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _steps = require("./steps");

var _reactNativeExpoViewportUnits = require("react-native-expo-viewport-units");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var Props = {};

var WaterIndicator = function (_Component) {
  (0, _inherits2["default"])(WaterIndicator, _Component);

  function WaterIndicator(props) {
    (0, _classCallCheck2["default"])(this, WaterIndicator);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(WaterIndicator).call(this, props));
  }

  (0, _createClass2["default"])(WaterIndicator, [{
    key: "render",
    value: function render() {
      var _this$props$volumen = this.props.volumen,
          volumen = _this$props$volumen === void 0 ? 100 : _this$props$volumen;
      return _react["default"].createElement(_reactNative.View, {
        style: styles.container
      }, _react["default"].createElement(_reactNative.View, {
        style: styles.cube
      }, _react["default"].createElement(_reactNative.View, {
        style: _objectSpread({}, styles.traker, {
          height: volumen + "%"
        })
      }), _react["default"].createElement(_steps.StepsIrrigation, {
        style: styles.steps,
        steps: ['3', '2.5', '2', '1.5', '1', '0.5', '0']
      })));
    }
  }]);
  return WaterIndicator;
}(_react.Component);

exports.WaterIndicator = WaterIndicator;

var styles = _reactNative.StyleSheet.create({
  container: {
    position: 'relative',
    width: '100%',
    marginTop: 20,
    marginBottom: 20,
    height: (0, _reactNativeExpoViewportUnits.vh)(45)
  },
  cube: {
    position: 'relative',
    left: '5%',
    width: '90%',
    height: '100%',
    fontSize: 18,
    textAlign: 'center'
  },
  traker: {
    position: 'absolute',
    borderBottomLeftRadius: 12,
    borderBottomRightRadius: 12,
    backgroundColor: '#00C3FF',
    height: '100vh',
    zIndex: 5,
    left: 0,
    bottom: 0,
    width: '100%',
    overflow: 'hidden'
  },
  steps: {
    left: 0,
    zIndex: 9,
    top: 0,
    width: 70,
    height: 300
  },
  step: {
    flexDirection: 'row',
    paddingBottom: 15
  },
  stepText: {
    color: '#fff',
    paddingRight: 5,
    paddingLeft: 5
  },
  text: {
    color: '#fff'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIlByb3BzIiwiV2F0ZXJJbmRpY2F0b3IiLCJwcm9wcyIsInZvbHVtZW4iLCJzdHlsZXMiLCJjb250YWluZXIiLCJjdWJlIiwidHJha2VyIiwiaGVpZ2h0Iiwic3RlcHMiLCJDb21wb25lbnQiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwicG9zaXRpb24iLCJ3aWR0aCIsIm1hcmdpblRvcCIsIm1hcmdpbkJvdHRvbSIsImxlZnQiLCJmb250U2l6ZSIsInRleHRBbGlnbiIsImJvcmRlckJvdHRvbUxlZnRSYWRpdXMiLCJib3JkZXJCb3R0b21SaWdodFJhZGl1cyIsImJhY2tncm91bmRDb2xvciIsInpJbmRleCIsImJvdHRvbSIsIm92ZXJmbG93IiwidG9wIiwic3RlcCIsImZsZXhEaXJlY3Rpb24iLCJwYWRkaW5nQm90dG9tIiwic3RlcFRleHQiLCJjb2xvciIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdMZWZ0IiwidGV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7OztBQUNBLElBQU1BLEtBQUssR0FBRyxFQUFkOztJQUNhQyxjOzs7QUFDWCwwQkFBWUMsS0FBWixFQUFtQjtBQUFBO0FBQUEseUhBQ1hBLEtBRFc7QUFFbEI7Ozs7NkJBQ1E7QUFBQSxnQ0FDaUIsS0FBS0EsS0FEdEIsQ0FDQUMsT0FEQTtBQUFBLFVBQ0FBLE9BREEsb0NBQ1UsR0FEVjtBQUVQLGFBQ0UsZ0NBQUMsaUJBQUQ7QUFBTSxRQUFBLEtBQUssRUFBRUMsTUFBTSxDQUFDQztBQUFwQixTQUNFLGdDQUFDLGlCQUFEO0FBQU0sUUFBQSxLQUFLLEVBQUVELE1BQU0sQ0FBQ0U7QUFBcEIsU0FDRSxnQ0FBQyxpQkFBRDtBQUFNLFFBQUEsS0FBSyxvQkFBT0YsTUFBTSxDQUFDRyxNQUFkO0FBQXNCQyxVQUFBQSxNQUFNLEVBQUtMLE9BQUw7QUFBNUI7QUFBWCxRQURGLEVBRUUsZ0NBQUMsc0JBQUQ7QUFDRSxRQUFBLEtBQUssRUFBRUMsTUFBTSxDQUFDSyxLQURoQjtBQUVFLFFBQUEsS0FBSyxFQUFFLENBQUMsR0FBRCxFQUFNLEtBQU4sRUFBYSxHQUFiLEVBQWtCLEtBQWxCLEVBQXlCLEdBQXpCLEVBQThCLEtBQTlCLEVBQXFDLEdBQXJDO0FBRlQsUUFGRixDQURGLENBREY7QUFVRDs7O0VBaEJpQ0MsZ0I7Ozs7QUFrQnBDLElBQU1OLE1BQU0sR0FBR08sd0JBQVdDLE1BQVgsQ0FBa0I7QUFDL0JQLEVBQUFBLFNBQVMsRUFBRTtBQUNUUSxJQUFBQSxRQUFRLEVBQUMsVUFEQTtBQUVUQyxJQUFBQSxLQUFLLEVBQUUsTUFGRTtBQUdUQyxJQUFBQSxTQUFTLEVBQUUsRUFIRjtBQUlUQyxJQUFBQSxZQUFZLEVBQUMsRUFKSjtBQUtUUixJQUFBQSxNQUFNLEVBQUUsc0NBQUcsRUFBSDtBQUxDLEdBRG9CO0FBUS9CRixFQUFBQSxJQUFJLEVBQUU7QUFDSk8sSUFBQUEsUUFBUSxFQUFFLFVBRE47QUFFSkksSUFBQUEsSUFBSSxFQUFFLElBRkY7QUFHSkgsSUFBQUEsS0FBSyxFQUFFLEtBSEg7QUFJSk4sSUFBQUEsTUFBTSxFQUFDLE1BSkg7QUFLSlUsSUFBQUEsUUFBUSxFQUFFLEVBTE47QUFNSkMsSUFBQUEsU0FBUyxFQUFFO0FBTlAsR0FSeUI7QUFnQi9CWixFQUFBQSxNQUFNLEVBQUU7QUFDTk0sSUFBQUEsUUFBUSxFQUFFLFVBREo7QUFFTk8sSUFBQUEsc0JBQXNCLEVBQUUsRUFGbEI7QUFHTkMsSUFBQUEsdUJBQXVCLEVBQUUsRUFIbkI7QUFJTkMsSUFBQUEsZUFBZSxFQUFFLFNBSlg7QUFLTmQsSUFBQUEsTUFBTSxFQUFFLE9BTEY7QUFNTmUsSUFBQUEsTUFBTSxFQUFFLENBTkY7QUFPTk4sSUFBQUEsSUFBSSxFQUFFLENBUEE7QUFRTk8sSUFBQUEsTUFBTSxFQUFDLENBUkQ7QUFTTlYsSUFBQUEsS0FBSyxFQUFFLE1BVEQ7QUFVTlcsSUFBQUEsUUFBUSxFQUFFO0FBVkosR0FoQnVCO0FBNEIvQmhCLEVBQUFBLEtBQUssRUFBRTtBQUNMUSxJQUFBQSxJQUFJLEVBQUUsQ0FERDtBQUVMTSxJQUFBQSxNQUFNLEVBQUUsQ0FGSDtBQUdMRyxJQUFBQSxHQUFHLEVBQUUsQ0FIQTtBQUlMWixJQUFBQSxLQUFLLEVBQUUsRUFKRjtBQUtMTixJQUFBQSxNQUFNLEVBQUU7QUFMSCxHQTVCd0I7QUFtQy9CbUIsRUFBQUEsSUFBSSxFQUFFO0FBQ0pDLElBQUFBLGFBQWEsRUFBRSxLQURYO0FBRUpDLElBQUFBLGFBQWEsRUFBRTtBQUZYLEdBbkN5QjtBQXVDL0JDLEVBQUFBLFFBQVEsRUFBRTtBQUNSQyxJQUFBQSxLQUFLLEVBQUUsTUFEQztBQUVSQyxJQUFBQSxZQUFZLEVBQUUsQ0FGTjtBQUdSQyxJQUFBQSxXQUFXLEVBQUU7QUFITCxHQXZDcUI7QUE0Qy9CQyxFQUFBQSxJQUFJLEVBQUU7QUFDSkgsSUFBQUEsS0FBSyxFQUFFO0FBREg7QUE1Q3lCLENBQWxCLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHtDb21wb25lbnR9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgU3RlcHNJcnJpZ2F0aW9ufSBmcm9tICcuL3N0ZXBzJztcbmltcG9ydCB7dmh9IGZyb20gJ3JlYWN0LW5hdGl2ZS1leHBvLXZpZXdwb3J0LXVuaXRzJztcbmNvbnN0IFByb3BzID0ge307XG5leHBvcnQgY2xhc3MgV2F0ZXJJbmRpY2F0b3IgZXh0ZW5kcyBDb21wb25lbnQ8UHJvcHM+IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHt2b2x1bWVuID0gMTAwfSA9IHRoaXMucHJvcHM7XG4gICAgcmV0dXJuIChcbiAgICAgIDxWaWV3IHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jdWJlfT5cbiAgICAgICAgICA8VmlldyBzdHlsZT17eyAuLi5zdHlsZXMudHJha2VyLCBoZWlnaHQ6IGAke3ZvbHVtZW59JWB9fSAvPlxuICAgICAgICAgIDxTdGVwc0lycmlnYXRpb24gXG4gICAgICAgICAgICBzdHlsZT17c3R5bGVzLnN0ZXBzfSBcbiAgICAgICAgICAgIHN0ZXBzPXtbJzMnLCAnMi41JywgJzInLCAnMS41JywgJzEnLCAnMC41JywgJzAnXX0vPlxuICAgICAgICA8L1ZpZXc+XG4gICAgICA8L1ZpZXc+XG4gICAgKTtcbiAgfVxufVxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICBjb250YWluZXI6IHtcbiAgICBwb3NpdGlvbjoncmVsYXRpdmUnLFxuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgbWFyZ2luVG9wOiAyMCxcbiAgICBtYXJnaW5Cb3R0b206MjAsXG4gICAgaGVpZ2h0OiB2aCg0NSlcbiAgfSxcbiAgY3ViZToge1xuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIGxlZnQ6ICc1JScsXG4gICAgd2lkdGg6ICc5MCUnLFxuICAgIGhlaWdodDonMTAwJScsXG4gICAgZm9udFNpemU6IDE4LFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gIH0sIFxuICB0cmFrZXI6IHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiAxMixcbiAgICBib3JkZXJCb3R0b21SaWdodFJhZGl1czogMTIsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnIzAwQzNGRicsXG4gICAgaGVpZ2h0OiAnMTAwdmgnLFxuICAgIHpJbmRleDogNSxcbiAgICBsZWZ0OiAwLFxuICAgIGJvdHRvbTowLFxuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nXG4gIH0sXG4gIHN0ZXBzOiB7XG4gICAgbGVmdDogMCxcbiAgICB6SW5kZXg6IDksXG4gICAgdG9wOiAwLFxuICAgIHdpZHRoOiA3MCxcbiAgICBoZWlnaHQ6IDMwMFxuICB9LFxuICBzdGVwOiB7XG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgcGFkZGluZ0JvdHRvbTogMTVcbiAgfSxcbiAgc3RlcFRleHQ6IHtcbiAgICBjb2xvciA6JyNmZmYnLFxuICAgIHBhZGRpbmdSaWdodDogNSxcbiAgICBwYWRkaW5nTGVmdDogNVxuICB9LFxuICB0ZXh0OiB7XG4gICAgY29sb3I6ICcjZmZmJ1xuICB9XG59KTsiXX0=