{"version":3,"sources":["computeProps.js"],"names":["computeProps","incomingProps","defaultProps","computedProps","_","clone","children","incomingPropsStyle","style","merge","computedPropsStyle","Array","isArray","forEach","StyleSheet","flatten"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,SAASA,YAAT,CAAsBC,aAAtB,EAAqCC,YAArC,EAAmD;AAEjD,MAAIC,aAAa,GAAG,EAApB;AAEAF,EAAAA,aAAa,GAAGG,mBAAEC,KAAF,CAAQJ,aAAR,CAAhB;AACA,SAAOA,aAAa,CAACK,QAArB;AAEA,MAAIC,kBAAkB,GAAGN,aAAa,CAACO,KAAvC;AACA,SAAOP,aAAa,CAACO,KAArB;AAIA,MAAIP,aAAJ,EAAmBG,mBAAEK,KAAF,CAAQN,aAAR,EAAuBD,YAAvB,EAAqCD,aAArC,EAAnB,KACKE,aAAa,GAAGD,YAAhB;;AAGL,MAAIK,kBAAJ,EAAwB;AACtB,QAAIG,kBAAkB,GAAG,EAAzB;AACAP,IAAAA,aAAa,CAACK,KAAd,GAAsB,EAAtB;;AACA,QAAIG,KAAK,CAACC,OAAN,CAAcL,kBAAd,CAAJ,EAAuC;AACrCH,yBAAES,OAAF,CAAUN,kBAAV,EAA8B,UAAAC,KAAK,EAAI;AACrC,YAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;AAC5BJ,6BAAEK,KAAF,CAAQC,kBAAR,EAA4BI,wBAAWC,OAAX,CAAmBP,KAAnB,CAA5B;AACD,SAFD,MAEO;AACLJ,6BAAEK,KAAF,CAAQC,kBAAR,EAA4BF,KAA5B;AACD;AACF,OAND;AAOD,KARD,MAQO;AACL,UAAI,OAAOD,kBAAP,IAA6B,QAAjC,EAA2C;AACzCG,QAAAA,kBAAkB,GAAGI,wBAAWC,OAAX,CACnBR,kBADmB,CAArB;AAGD,OAJD,MAIO;AACLG,QAAAA,kBAAkB,GAAGH,kBAArB;AACD;AACF;;AAEDH,uBAAEK,KAAF,CAAQN,aAAa,CAACK,KAAtB,EAA6BN,YAAY,CAACM,KAA1C,EAAiDE,kBAAjD;AACD;;AAID,SAAOP,aAAP;AACD;;AAAA;eAEcH,Y","sourcesContent":["import React from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport _ from 'lodash';\n\nfunction computeProps(incomingProps, defaultProps) {\n  // External props has a higher precedence\n  var computedProps = {};\n\n  incomingProps = _.clone(incomingProps);\n  delete incomingProps.children;\n\n  var incomingPropsStyle = incomingProps.style;\n  delete incomingProps.style;\n\n  // console.log(defaultProps, incomingProps);\n\n  if (incomingProps) _.merge(computedProps, defaultProps, incomingProps);\n  else computedProps = defaultProps;\n\n  // Pass the merged Style Object instead\n  if (incomingPropsStyle) {\n    var computedPropsStyle = {};\n    computedProps.style = {};\n    if (Array.isArray(incomingPropsStyle)) {\n      _.forEach(incomingPropsStyle, style => {\n        if (typeof style == \"number\") {\n          _.merge(computedPropsStyle, StyleSheet.flatten(style));\n        } else {\n          _.merge(computedPropsStyle, style);\n        }\n      });\n    } else {\n      if (typeof incomingPropsStyle == \"number\") {\n        computedPropsStyle = StyleSheet.flatten(\n          incomingPropsStyle\n        );\n      } else {\n        computedPropsStyle = incomingPropsStyle;\n      }\n    }\n\n    _.merge(computedProps.style, defaultProps.style, computedPropsStyle);\n  }\n\n  // console.log(\"computedProps \", computedProps);\n\n  return computedProps;\n};\n\nexport default computeProps;\n"]}