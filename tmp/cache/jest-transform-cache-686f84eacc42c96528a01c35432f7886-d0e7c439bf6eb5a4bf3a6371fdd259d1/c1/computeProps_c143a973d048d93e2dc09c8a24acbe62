5a46b12bcdcd829f754a40d8b3cd9511
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _lodash = _interopRequireDefault(require("lodash"));

function computeProps(incomingProps, defaultProps) {
  var computedProps = {};
  incomingProps = _lodash["default"].clone(incomingProps);
  delete incomingProps.children;
  var incomingPropsStyle = incomingProps.style;
  delete incomingProps.style;
  if (incomingProps) _lodash["default"].merge(computedProps, defaultProps, incomingProps);else computedProps = defaultProps;

  if (incomingPropsStyle) {
    var computedPropsStyle = {};
    computedProps.style = {};

    if (Array.isArray(incomingPropsStyle)) {
      _lodash["default"].forEach(incomingPropsStyle, function (style) {
        if (typeof style == "number") {
          _lodash["default"].merge(computedPropsStyle, _reactNative.StyleSheet.flatten(style));
        } else {
          _lodash["default"].merge(computedPropsStyle, style);
        }
      });
    } else {
      if (typeof incomingPropsStyle == "number") {
        computedPropsStyle = _reactNative.StyleSheet.flatten(incomingPropsStyle);
      } else {
        computedPropsStyle = incomingPropsStyle;
      }
    }

    _lodash["default"].merge(computedProps.style, defaultProps.style, computedPropsStyle);
  }

  return computedProps;
}

;
var _default = computeProps;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXB1dGVQcm9wcy5qcyJdLCJuYW1lcyI6WyJjb21wdXRlUHJvcHMiLCJpbmNvbWluZ1Byb3BzIiwiZGVmYXVsdFByb3BzIiwiY29tcHV0ZWRQcm9wcyIsIl8iLCJjbG9uZSIsImNoaWxkcmVuIiwiaW5jb21pbmdQcm9wc1N0eWxlIiwic3R5bGUiLCJtZXJnZSIsImNvbXB1dGVkUHJvcHNTdHlsZSIsIkFycmF5IiwiaXNBcnJheSIsImZvckVhY2giLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUVBLFNBQVNBLFlBQVQsQ0FBc0JDLGFBQXRCLEVBQXFDQyxZQUFyQyxFQUFtRDtBQUVqRCxNQUFJQyxhQUFhLEdBQUcsRUFBcEI7QUFFQUYsRUFBQUEsYUFBYSxHQUFHRyxtQkFBRUMsS0FBRixDQUFRSixhQUFSLENBQWhCO0FBQ0EsU0FBT0EsYUFBYSxDQUFDSyxRQUFyQjtBQUVBLE1BQUlDLGtCQUFrQixHQUFHTixhQUFhLENBQUNPLEtBQXZDO0FBQ0EsU0FBT1AsYUFBYSxDQUFDTyxLQUFyQjtBQUlBLE1BQUlQLGFBQUosRUFBbUJHLG1CQUFFSyxLQUFGLENBQVFOLGFBQVIsRUFBdUJELFlBQXZCLEVBQXFDRCxhQUFyQyxFQUFuQixLQUNLRSxhQUFhLEdBQUdELFlBQWhCOztBQUdMLE1BQUlLLGtCQUFKLEVBQXdCO0FBQ3RCLFFBQUlHLGtCQUFrQixHQUFHLEVBQXpCO0FBQ0FQLElBQUFBLGFBQWEsQ0FBQ0ssS0FBZCxHQUFzQixFQUF0Qjs7QUFDQSxRQUFJRyxLQUFLLENBQUNDLE9BQU4sQ0FBY0wsa0JBQWQsQ0FBSixFQUF1QztBQUNyQ0gseUJBQUVTLE9BQUYsQ0FBVU4sa0JBQVYsRUFBOEIsVUFBQUMsS0FBSyxFQUFJO0FBQ3JDLFlBQUksT0FBT0EsS0FBUCxJQUFnQixRQUFwQixFQUE4QjtBQUM1QkosNkJBQUVLLEtBQUYsQ0FBUUMsa0JBQVIsRUFBNEJJLHdCQUFXQyxPQUFYLENBQW1CUCxLQUFuQixDQUE1QjtBQUNELFNBRkQsTUFFTztBQUNMSiw2QkFBRUssS0FBRixDQUFRQyxrQkFBUixFQUE0QkYsS0FBNUI7QUFDRDtBQUNGLE9BTkQ7QUFPRCxLQVJELE1BUU87QUFDTCxVQUFJLE9BQU9ELGtCQUFQLElBQTZCLFFBQWpDLEVBQTJDO0FBQ3pDRyxRQUFBQSxrQkFBa0IsR0FBR0ksd0JBQVdDLE9BQVgsQ0FDbkJSLGtCQURtQixDQUFyQjtBQUdELE9BSkQsTUFJTztBQUNMRyxRQUFBQSxrQkFBa0IsR0FBR0gsa0JBQXJCO0FBQ0Q7QUFDRjs7QUFFREgsdUJBQUVLLEtBQUYsQ0FBUU4sYUFBYSxDQUFDSyxLQUF0QixFQUE2Qk4sWUFBWSxDQUFDTSxLQUExQyxFQUFpREUsa0JBQWpEO0FBQ0Q7O0FBSUQsU0FBT1AsYUFBUDtBQUNEOztBQUFBO2VBRWNILFkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBTdHlsZVNoZWV0IH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuZnVuY3Rpb24gY29tcHV0ZVByb3BzKGluY29taW5nUHJvcHMsIGRlZmF1bHRQcm9wcykge1xuICAvLyBFeHRlcm5hbCBwcm9wcyBoYXMgYSBoaWdoZXIgcHJlY2VkZW5jZVxuICB2YXIgY29tcHV0ZWRQcm9wcyA9IHt9O1xuXG4gIGluY29taW5nUHJvcHMgPSBfLmNsb25lKGluY29taW5nUHJvcHMpO1xuICBkZWxldGUgaW5jb21pbmdQcm9wcy5jaGlsZHJlbjtcblxuICB2YXIgaW5jb21pbmdQcm9wc1N0eWxlID0gaW5jb21pbmdQcm9wcy5zdHlsZTtcbiAgZGVsZXRlIGluY29taW5nUHJvcHMuc3R5bGU7XG5cbiAgLy8gY29uc29sZS5sb2coZGVmYXVsdFByb3BzLCBpbmNvbWluZ1Byb3BzKTtcblxuICBpZiAoaW5jb21pbmdQcm9wcykgXy5tZXJnZShjb21wdXRlZFByb3BzLCBkZWZhdWx0UHJvcHMsIGluY29taW5nUHJvcHMpO1xuICBlbHNlIGNvbXB1dGVkUHJvcHMgPSBkZWZhdWx0UHJvcHM7XG5cbiAgLy8gUGFzcyB0aGUgbWVyZ2VkIFN0eWxlIE9iamVjdCBpbnN0ZWFkXG4gIGlmIChpbmNvbWluZ1Byb3BzU3R5bGUpIHtcbiAgICB2YXIgY29tcHV0ZWRQcm9wc1N0eWxlID0ge307XG4gICAgY29tcHV0ZWRQcm9wcy5zdHlsZSA9IHt9O1xuICAgIGlmIChBcnJheS5pc0FycmF5KGluY29taW5nUHJvcHNTdHlsZSkpIHtcbiAgICAgIF8uZm9yRWFjaChpbmNvbWluZ1Byb3BzU3R5bGUsIHN0eWxlID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzdHlsZSA9PSBcIm51bWJlclwiKSB7XG4gICAgICAgICAgXy5tZXJnZShjb21wdXRlZFByb3BzU3R5bGUsIFN0eWxlU2hlZXQuZmxhdHRlbihzdHlsZSkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIF8ubWVyZ2UoY29tcHV0ZWRQcm9wc1N0eWxlLCBzdHlsZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodHlwZW9mIGluY29taW5nUHJvcHNTdHlsZSA9PSBcIm51bWJlclwiKSB7XG4gICAgICAgIGNvbXB1dGVkUHJvcHNTdHlsZSA9IFN0eWxlU2hlZXQuZmxhdHRlbihcbiAgICAgICAgICBpbmNvbWluZ1Byb3BzU3R5bGVcbiAgICAgICAgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbXB1dGVkUHJvcHNTdHlsZSA9IGluY29taW5nUHJvcHNTdHlsZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBfLm1lcmdlKGNvbXB1dGVkUHJvcHMuc3R5bGUsIGRlZmF1bHRQcm9wcy5zdHlsZSwgY29tcHV0ZWRQcm9wc1N0eWxlKTtcbiAgfVxuXG4gIC8vIGNvbnNvbGUubG9nKFwiY29tcHV0ZWRQcm9wcyBcIiwgY29tcHV0ZWRQcm9wcyk7XG5cbiAgcmV0dXJuIGNvbXB1dGVkUHJvcHM7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb21wdXRlUHJvcHM7XG4iXX0=