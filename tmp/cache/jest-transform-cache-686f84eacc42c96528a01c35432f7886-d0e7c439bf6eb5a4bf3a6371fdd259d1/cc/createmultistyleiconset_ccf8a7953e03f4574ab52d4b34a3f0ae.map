{"version":3,"sources":["create-multi-style-icon-set.js"],"names":["createMultiStyleIconSet","styles","optionsInput","styleNames","Object","keys","length","Error","options","defaultStyle","fallbackFamily","glyphValidator","iconSets","reduce","acc","name","style","glyphMap","fontFamily","fontFile","fontStyle","styleFromProps","props","result","propName","indexOf","getIconSetForProps","family","selectIconClass","iconSet","iconClass","reduceProps","prop","getStyledIconSet","getImageSource","size","DEFAULT_ICON_SIZE","color","DEFAULT_ICON_COLOR","getFontFamily","getRawGlyphMap","hasIcon","createStyledIconClass","selectClass","IconClass","selectedIconSet","SelectedIconClass","PureComponent","propTypes","PropTypes","bool","defaultProps","Icon","Button","TabBarItem","TabBarItemIOS","ToolbarAndroid"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport createIconSet, {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n} from './create-icon-set';\n\nexport default function createMultiStyleIconSet(styles, optionsInput = {}) {\n  const styleNames = Object.keys(styles);\n\n  if (styleNames.length === 0) {\n    throw new Error('You need to add at least one style');\n  }\n\n  const options = {\n    defaultStyle: styleNames[0],\n    fallbackFamily: () => styleNames[0],\n    glyphValidator: () => true,\n    ...optionsInput,\n  };\n\n  const iconSets = styleNames.reduce((acc, name) => {\n    const style = styles[name];\n\n    acc[name] = createIconSet(\n      style.glyphMap || {},\n      style.fontFamily || '',\n      style.fontFile || '',\n      style.fontStyle || {}\n    );\n\n    return acc;\n  }, {});\n\n  function styleFromProps(props) {\n    return Object.keys(props).reduce(\n      (result, propName) =>\n        styleNames.indexOf(propName) !== -1 && props[propName] === true\n          ? propName\n          : result,\n      options.defaultStyle\n    );\n  }\n\n  function getIconSetForProps(props) {\n    const { name } = props;\n    const style = styleFromProps(props);\n\n    if (options.glyphValidator(name, style)) return iconSets[style];\n\n    const family = options.fallbackFamily(name);\n\n    if (styleNames.indexOf(family) === -1) {\n      return options.defaultStyle;\n    }\n\n    return iconSets[family];\n  }\n\n  function selectIconClass(iconSet, iconClass) {\n    return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n  }\n\n  function reduceProps(props) {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (styleNames.indexOf(prop) === -1) {\n        acc[prop] = props[prop];\n      }\n\n      return acc;\n    }, {});\n  }\n\n  function getStyledIconSet(style, name = '') {\n    if (styleNames.indexOf(style) === -1) {\n      return iconSets[options.defaultStyle];\n    }\n\n    return !name\n      ? iconSets[styleFromProps({ [style]: true })]\n      : getIconSetForProps({ name, [style]: true });\n  }\n\n  function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR,\n    style = options.defaultStyle\n  ) {\n    return getStyledIconSet(style, name).getImageSource(name, size, color);\n  }\n\n  function getFontFamily(style = options.defaultStyle) {\n    return getStyledIconSet(style).getFontFamily();\n  }\n\n  function getRawGlyphMap(style = options.defaultStyle) {\n    return getStyledIconSet(style).getRawGlyphMap();\n  }\n\n  function hasIcon(name, style = options.defaultStyle) {\n    return options.glyphValidator(name, style);\n  }\n\n  function createStyledIconClass(selectClass = '') {\n    class IconClass extends PureComponent {\n      static propTypes = styleNames.reduce((acc, name) => {\n        acc[name] = PropTypes.bool;\n        return acc;\n      }, {});\n\n      static defaultProps = styleNames.reduce((acc, name) => {\n        acc[name] = false;\n        return acc;\n      }, {});\n\n      render() {\n        const selectedIconSet = getIconSetForProps(this.props);\n        const SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n        const props = reduceProps(this.props);\n\n        return <SelectedIconClass {...props} />;\n      }\n    }\n\n    return IconClass;\n  }\n\n  const Icon = createStyledIconClass();\n  Icon.Button = createStyledIconClass('Button');\n  Icon.TabBarItem = createStyledIconClass('TabBarItem');\n  Icon.TabBarItemIOS = createStyledIconClass('TabBarItemIOS');\n  Icon.ToolbarAndroid = createStyledIconClass('ToolbarAndroid');\n  Icon.getStyledIconSet = getStyledIconSet;\n  Icon.getImageSource = getImageSource;\n  Icon.getFontFamily = getFontFamily;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.hasIcon = hasIcon;\n\n  return Icon;\n}\n"]}