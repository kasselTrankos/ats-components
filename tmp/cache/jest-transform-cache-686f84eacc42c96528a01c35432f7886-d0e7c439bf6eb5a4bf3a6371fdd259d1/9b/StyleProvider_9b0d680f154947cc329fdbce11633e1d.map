{"version":3,"sources":["StyleProvider.js"],"names":["StyleProvider","props","context","state","theme","createTheme","nextProps","style","setState","Theme","children","Children","only","React","Component","propTypes","PropTypes","element","isRequired","object","defaultProps","childContextTypes","ThemeShape"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;IAKqBA,a;;;AAcnB,yBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;AAC1B,yHAAMD,KAAN,EAAaC,OAAb;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,MAAKC,WAAL,CAAiBJ,KAAjB;AADI,KAAb;AAF0B;AAK3B;;;;sCAEiB;AAChB,aAAO;AACLG,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC;AADb,OAAP;AAGD;;;qDAEgCE,S,EAAW;AAC1C,UAAIA,SAAS,CAACC,KAAV,KAAoB,KAAKN,KAAL,CAAWM,KAAnC,EAA0C;AACxC,aAAKC,QAAL,CAAc;AACZJ,UAAAA,KAAK,EAAE,KAAKC,WAAL,CAAiBC,SAAjB;AADK,SAAd;AAGD;AACF;;;gCAEWL,K,EAAO;AACjB,aAAO,IAAIQ,iBAAJ,CAAUR,KAAK,CAACM,KAAhB,CAAP;AACD;;;6BAEQ;AAAA,UACCG,QADD,GACc,KAAKT,KADnB,CACCS,QADD;AAGP,aAAOC,gBAASC,IAAT,CAAcF,QAAd,CAAP;AACD;;;EA3CwCG,kBAAMC,S;;;AAA5Bd,a,CACZe,S,GAAY;AACjBL,EAAAA,QAAQ,EAAEM,sBAAUC,OAAV,CAAkBC,UADX;AAEjBX,EAAAA,KAAK,EAAES,sBAAUG;AAFA,C;AADAnB,a,CAMZoB,Y,GAAe;AACpBb,EAAAA,KAAK,EAAE;AADa,C;AANHP,a,CAUZqB,iB,GAAoB;AACzBjB,EAAAA,KAAK,EAAEkB,kBAAWJ;AADO,C","sourcesContent":["import React, { Children } from 'react';\nimport PropTypes from 'prop-types';\nimport Theme, { ThemeShape } from './Theme';\nimport normalizeStyle from './StyleNormalizer/normalizeStyle';\n\n/**\n *  Provides a theme to child components trough context.\n */\nexport default class StyleProvider extends React.Component {\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n    style: PropTypes.object,\n  };\n\n  static defaultProps = {\n    style: {},\n  };\n\n  static childContextTypes = {\n    theme: ThemeShape.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      theme: this.createTheme(props),\n    };\n  }\n\n  getChildContext() {\n    return {\n      theme: this.state.theme,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.style !== this.props.style) {\n      this.setState({\n        theme: this.createTheme(nextProps),\n      });\n    }\n  }\n\n  createTheme(props) {\n    return new Theme(props.style);\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return Children.only(children);\n  }\n}\n"]}