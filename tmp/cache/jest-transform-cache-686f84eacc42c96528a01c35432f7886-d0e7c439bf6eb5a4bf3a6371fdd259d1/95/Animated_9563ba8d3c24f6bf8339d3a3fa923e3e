54ffff284a66f1c383731402a8c5d75c
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _Platform = _interopRequireDefault(require("../../Utilities/Platform"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var AnimatedMock = require('./AnimatedMock');

var AnimatedImplementation = require('./AnimatedImplementation');

var Animated = _Platform["default"].isTesting ? AnimatedMock : AnimatedImplementation;
module.exports = _objectSpread({
  get FlatList() {
    return require('./components/AnimatedFlatList');
  },

  get Image() {
    return require('./components/AnimatedImage');
  },

  get ScrollView() {
    return require('./components/AnimatedScrollView');
  },

  get SectionList() {
    return require('./components/AnimatedSectionList');
  },

  get Text() {
    return require('./components/AnimatedText');
  },

  get View() {
    return require('./components/AnimatedView');
  }

}, Animated);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuaW1hdGVkLmpzIl0sIm5hbWVzIjpbIkFuaW1hdGVkTW9jayIsInJlcXVpcmUiLCJBbmltYXRlZEltcGxlbWVudGF0aW9uIiwiQW5pbWF0ZWQiLCJQbGF0Zm9ybSIsImlzVGVzdGluZyIsIm1vZHVsZSIsImV4cG9ydHMiLCJGbGF0TGlzdCIsIkltYWdlIiwiU2Nyb2xsVmlldyIsIlNlY3Rpb25MaXN0IiwiVGV4dCIsIlZpZXciXSwibWFwcGluZ3MiOiJBQVVBOzs7Ozs7QUFFQTs7Ozs7O0FBRUEsSUFBTUEsWUFBWSxHQUFHQyxPQUFPLENBQUMsZ0JBQUQsQ0FBNUI7O0FBQ0EsSUFBTUMsc0JBQXNCLEdBQUdELE9BQU8sQ0FBQywwQkFBRCxDQUF0Qzs7QUFFQSxJQUFNRSxRQUFRLEdBQUtDLHFCQUFTQyxTQUFULEdBQ2ZMLFlBRGUsR0FFZkUsc0JBRko7QUFJQUksTUFBTSxDQUFDQyxPQUFQO0FBQ0UsTUFBSUMsUUFBSixHQUFvQjtBQUNsQixXQUFPUCxPQUFPLENBQUMsK0JBQUQsQ0FBZDtBQUNELEdBSEg7O0FBSUUsTUFBSVEsS0FBSixHQUFpQjtBQUNmLFdBQU9SLE9BQU8sQ0FBQyw0QkFBRCxDQUFkO0FBQ0QsR0FOSDs7QUFPRSxNQUFJUyxVQUFKLEdBQXNCO0FBQ3BCLFdBQU9ULE9BQU8sQ0FBQyxpQ0FBRCxDQUFkO0FBQ0QsR0FUSDs7QUFVRSxNQUFJVSxXQUFKLEdBQXVCO0FBQ3JCLFdBQU9WLE9BQU8sQ0FBQyxrQ0FBRCxDQUFkO0FBQ0QsR0FaSDs7QUFhRSxNQUFJVyxJQUFKLEdBQWdCO0FBQ2QsV0FBT1gsT0FBTyxDQUFDLDJCQUFELENBQWQ7QUFDRCxHQWZIOztBQWdCRSxNQUFJWSxJQUFKLEdBQWdCO0FBQ2QsV0FBT1osT0FBTyxDQUFDLDJCQUFELENBQWQ7QUFDRDs7QUFsQkgsR0FtQktFLFFBbkJMIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IFBsYXRmb3JtIGZyb20gJy4uLy4uL1V0aWxpdGllcy9QbGF0Zm9ybSc7XG5cbmNvbnN0IEFuaW1hdGVkTW9jayA9IHJlcXVpcmUoJy4vQW5pbWF0ZWRNb2NrJyk7XG5jb25zdCBBbmltYXRlZEltcGxlbWVudGF0aW9uID0gcmVxdWlyZSgnLi9BbmltYXRlZEltcGxlbWVudGF0aW9uJyk7XG5cbmNvbnN0IEFuaW1hdGVkID0gKChQbGF0Zm9ybS5pc1Rlc3RpbmdcbiAgPyBBbmltYXRlZE1vY2tcbiAgOiBBbmltYXRlZEltcGxlbWVudGF0aW9uKTogdHlwZW9mIEFuaW1hdGVkTW9jayk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXQgRmxhdExpc3QoKTogYW55IHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9jb21wb25lbnRzL0FuaW1hdGVkRmxhdExpc3QnKTtcbiAgfSxcbiAgZ2V0IEltYWdlKCk6IGFueSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY29tcG9uZW50cy9BbmltYXRlZEltYWdlJyk7XG4gIH0sXG4gIGdldCBTY3JvbGxWaWV3KCk6IGFueSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY29tcG9uZW50cy9BbmltYXRlZFNjcm9sbFZpZXcnKTtcbiAgfSxcbiAgZ2V0IFNlY3Rpb25MaXN0KCk6IGFueSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY29tcG9uZW50cy9BbmltYXRlZFNlY3Rpb25MaXN0Jyk7XG4gIH0sXG4gIGdldCBUZXh0KCk6IGFueSB7XG4gICAgcmV0dXJuIHJlcXVpcmUoJy4vY29tcG9uZW50cy9BbmltYXRlZFRleHQnKTtcbiAgfSxcbiAgZ2V0IFZpZXcoKTogYW55IHtcbiAgICByZXR1cm4gcmVxdWlyZSgnLi9jb21wb25lbnRzL0FuaW1hdGVkVmlldycpO1xuICB9LFxuICAuLi5BbmltYXRlZCxcbn07XG4iXX0=