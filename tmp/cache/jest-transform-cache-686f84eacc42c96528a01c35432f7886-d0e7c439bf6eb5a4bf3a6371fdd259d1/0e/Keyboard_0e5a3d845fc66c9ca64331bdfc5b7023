bcadcafc1b24fb2aff1aebe71d1d1d56
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _NativeKeyboardObserver = _interopRequireDefault(require("./NativeKeyboardObserver"));

var LayoutAnimation = require('../../LayoutAnimation/LayoutAnimation');

var NativeEventEmitter = require('../../EventEmitter/NativeEventEmitter');

var dismissKeyboard = require('../../Utilities/dismissKeyboard');

var invariant = require('invariant');

var KeyboardEventEmitter = new NativeEventEmitter(_NativeKeyboardObserver["default"]);
var Keyboard = {
  addListener: function addListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeListener: function removeListener(eventName, callback) {
    invariant(false, 'Dummy method used for documentation');
  },
  removeAllListeners: function removeAllListeners(eventName) {
    invariant(false, 'Dummy method used for documentation');
  },
  dismiss: function dismiss() {
    invariant(false, 'Dummy method used for documentation');
  },
  scheduleLayoutAnimation: function scheduleLayoutAnimation(event) {
    invariant(false, 'Dummy method used for documentation');
  }
};
Keyboard = KeyboardEventEmitter;
Keyboard.dismiss = dismissKeyboard;

Keyboard.scheduleLayoutAnimation = function (event) {
  var duration = event.duration,
      easing = event.easing;

  if (duration != null && duration !== 0) {
    LayoutAnimation.configureNext({
      duration: duration,
      update: {
        duration: duration,
        type: easing != null && LayoutAnimation.Types[easing] || 'keyboard'
      }
    });
  }
};

module.exports = Keyboard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,