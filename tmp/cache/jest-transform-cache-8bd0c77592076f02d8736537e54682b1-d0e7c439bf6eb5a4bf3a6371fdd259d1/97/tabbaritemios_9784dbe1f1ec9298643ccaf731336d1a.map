{"version":3,"sources":["tab-bar-item-ios.js"],"names":["ICON_PROP_NAMES","SELECTED_ICON_PROP_NAMES","arePropsEqual","keys","prevProps","nextProps","areIconPropsEqual","areSelectedIconPropsEqual","createTabBarItemIOSComponent","IconNamePropType","getImageSource","state","icon","undefined","selectedIcon","updateIconSource","updateSelectedIconSource","props","iconName","iconSize","iconColor","setState","selectedIconName","selectedIconColor","PureComponent","propTypes","isRequired","PropTypes","number","oneOfType","string","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from './react-native';\n\nconst ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nconst SELECTED_ICON_PROP_NAMES = [\n  ...ICON_PROP_NAMES,\n  'selectedIconName',\n  'selectedIconColor',\n];\n\nconst arePropsEqual = keys => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nexport default function createTabBarItemIOSComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class TabBarItemIOS extends PureComponent {\n    static propTypes = {\n      iconName: IconNamePropType.isRequired,\n      selectedIconName: IconNamePropType,\n      iconSize: PropTypes.number,\n      iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      selectedIconColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n    };\n\n    static defaultProps = {\n      iconSize: 30,\n    };\n\n    state = {\n      icon: undefined,\n      selectedIcon: undefined,\n    };\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    async updateIconSource() {\n      const { iconName, iconSize, iconColor } = this.props;\n      if (iconName) {\n        const icon = await getImageSource(iconName, iconSize, iconColor);\n        this.setState({ icon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.icon) {\n        this.setState({ icon: undefined });\n      }\n    }\n\n    async updateSelectedIconSource() {\n      const {\n        iconName,\n        iconColor,\n        iconSize,\n        selectedIconName,\n        selectedIconColor,\n      } = this.props;\n      if (selectedIconName || selectedIconColor) {\n        const selectedIcon = await getImageSource(\n          selectedIconName || iconName,\n          iconSize,\n          selectedIconColor || iconColor\n        );\n        this.setState({ selectedIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedIcon) {\n        this.setState({ selectedIcon: undefined });\n      }\n    }\n\n    render() {\n      return <TabBarIOS.Item {...this.state} {...this.props} />;\n    }\n  };\n}\n"]}