a64e3decdd13224d40552b616cf16899
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var React = require('react');

var requireNativeComponent = require('../../../ReactNative/requireNativeComponent');

var RCTRefreshControl = requireNativeComponent('RCTRefreshControl');

var RefreshControlMock = function (_React$Component) {
  (0, _inherits2["default"])(RefreshControlMock, _React$Component);

  function RefreshControlMock() {
    (0, _classCallCheck2["default"])(this, RefreshControlMock);
    return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(RefreshControlMock).apply(this, arguments));
  }

  (0, _createClass2["default"])(RefreshControlMock, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      RefreshControlMock.latestRef = this;
    }
  }, {
    key: "render",
    value: function render() {
      return React.createElement(RCTRefreshControl, null);
    }
  }]);
  return RefreshControlMock;
}(React.Component);

RefreshControlMock.latestRef = void 0;
module.exports = RefreshControlMock;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlZnJlc2hDb250cm9sTW9jay5qcyJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJyZXF1aXJlTmF0aXZlQ29tcG9uZW50IiwiUkNUUmVmcmVzaENvbnRyb2wiLCJSZWZyZXNoQ29udHJvbE1vY2siLCJsYXRlc3RSZWYiLCJDb21wb25lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUVBLElBQU1DLHNCQUFzQixHQUFHRCxPQUFPLENBQUMsNkNBQUQsQ0FBdEM7O0FBRUEsSUFBTUUsaUJBQWlCLEdBQUdELHNCQUFzQixDQUFDLG1CQUFELENBQWhEOztJQUVNRSxrQjs7Ozs7Ozs7Ozt3Q0FFZ0I7QUFDbEJBLE1BQUFBLGtCQUFrQixDQUFDQyxTQUFuQixHQUErQixJQUEvQjtBQUNEOzs7NkJBQytCO0FBQzlCLGFBQU8sb0JBQUMsaUJBQUQsT0FBUDtBQUNEOzs7RUFQOEJMLEtBQUssQ0FBQ00sUzs7QUFBakNGLGtCLENBQ0dDLFM7QUFTVEUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCSixrQkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqIEBmbG93IHN0cmljdC1sb2NhbFxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG5jb25zdCByZXF1aXJlTmF0aXZlQ29tcG9uZW50ID0gcmVxdWlyZSgnLi4vLi4vLi4vUmVhY3ROYXRpdmUvcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCcpO1xuXG5jb25zdCBSQ1RSZWZyZXNoQ29udHJvbCA9IHJlcXVpcmVOYXRpdmVDb21wb25lbnQoJ1JDVFJlZnJlc2hDb250cm9sJyk7XG5cbmNsYXNzIFJlZnJlc2hDb250cm9sTW9jayBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDx7fT4ge1xuICBzdGF0aWMgbGF0ZXN0UmVmOiA/UmVmcmVzaENvbnRyb2xNb2NrO1xuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICBSZWZyZXNoQ29udHJvbE1vY2subGF0ZXN0UmVmID0gdGhpcztcbiAgfVxuICByZW5kZXIoKTogUmVhY3QuRWxlbWVudDxzdHJpbmc+IHtcbiAgICByZXR1cm4gPFJDVFJlZnJlc2hDb250cm9sIC8+O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUmVmcmVzaENvbnRyb2xNb2NrO1xuIl19