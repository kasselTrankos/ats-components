675b771c8828dd39f8032f2f5443613d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.BOTTOM_LEFT = exports.TOP_LEFT = exports.BOTTOM_RIGHT = exports.TOP_RIGHT = exports.BOTTOM = exports.TOP = exports.RIGHT = exports.LEFT = exports.VERTICAL = exports.HORIZONTAL = exports.CORNERS = exports.SIDES = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _lodash = _interopRequireDefault(require("lodash"));

var createShorthand = function createShorthand(name, type) {
  return {
    name: name,
    type: _lodash["default"].isUndefined(type) ? name : type
  };
};

var SIDES = createShorthand('Sides', '');
exports.SIDES = SIDES;
var CORNERS = createShorthand('Corners', '');
exports.CORNERS = CORNERS;
var HORIZONTAL = createShorthand('Horizontal');
exports.HORIZONTAL = HORIZONTAL;
var VERTICAL = createShorthand('Vertical');
exports.VERTICAL = VERTICAL;
var LEFT = 'Left';
exports.LEFT = LEFT;
var RIGHT = 'Right';
exports.RIGHT = RIGHT;
var TOP = 'Top';
exports.TOP = TOP;
var BOTTOM = 'Bottom';
exports.BOTTOM = BOTTOM;
var TOP_RIGHT = 'TopRight';
exports.TOP_RIGHT = TOP_RIGHT;
var BOTTOM_RIGHT = 'BottomRight';
exports.BOTTOM_RIGHT = BOTTOM_RIGHT;
var TOP_LEFT = 'TopLeft';
exports.TOP_LEFT = TOP_LEFT;
var BOTTOM_LEFT = 'BottomLeft';
exports.BOTTOM_LEFT = BOTTOM_LEFT;

var ShorthandsNormalizerFactory = function () {
  function ShorthandsNormalizerFactory() {
    var _this$createNormalize;

    (0, _classCallCheck2["default"])(this, ShorthandsNormalizerFactory);
    this.createNormalizersMap = (_this$createNormalize = {}, (0, _defineProperty2["default"])(_this$createNormalize, SIDES.name, this.createAllSidesNormalizer), (0, _defineProperty2["default"])(_this$createNormalize, CORNERS.name, this.createAllCornersNormalizer), (0, _defineProperty2["default"])(_this$createNormalize, HORIZONTAL.name, this.createHorizontalSidesNormalizer), (0, _defineProperty2["default"])(_this$createNormalize, VERTICAL.name, this.createVerticalSidesNormalizer), _this$createNormalize);
  }

  (0, _createClass2["default"])(ShorthandsNormalizerFactory, [{
    key: "createAllSidesNormalizer",
    value: function createAllSidesNormalizer(prop, shorthand) {
      var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      return function (val) {
        var _ref;

        return _ref = {}, (0, _defineProperty2["default"])(_ref, prop + LEFT + suffix, val), (0, _defineProperty2["default"])(_ref, prop + RIGHT + suffix, val), (0, _defineProperty2["default"])(_ref, prop + TOP + suffix, val), (0, _defineProperty2["default"])(_ref, prop + BOTTOM + suffix, val), _ref;
      };
    }
  }, {
    key: "createAllCornersNormalizer",
    value: function createAllCornersNormalizer(prop, shorthand) {
      var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
      return function (val) {
        var _ref2;

        return _ref2 = {}, (0, _defineProperty2["default"])(_ref2, prop + BOTTOM_LEFT + suffix, val), (0, _defineProperty2["default"])(_ref2, prop + BOTTOM_RIGHT + suffix, val), (0, _defineProperty2["default"])(_ref2, prop + TOP_LEFT + suffix, val), (0, _defineProperty2["default"])(_ref2, prop + TOP_RIGHT + suffix, val), _ref2;
      };
    }
  }, {
    key: "createHorizontalSidesNormalizer",
    value: function createHorizontalSidesNormalizer(prop) {
      return function (val) {
        var _ref3;

        return _ref3 = {}, (0, _defineProperty2["default"])(_ref3, prop + LEFT, val), (0, _defineProperty2["default"])(_ref3, prop + RIGHT, val), _ref3;
      };
    }
  }, {
    key: "createVerticalSidesNormalizer",
    value: function createVerticalSidesNormalizer(prop) {
      return function (val) {
        var _ref4;

        return _ref4 = {}, (0, _defineProperty2["default"])(_ref4, prop + TOP, val), (0, _defineProperty2["default"])(_ref4, prop + BOTTOM, val), _ref4;
      };
    }
  }, {
    key: "getNormalizerCreator",
    value: function getNormalizerCreator(shorthand) {
      return this.createNormalizersMap[shorthand.name];
    }
  }, {
    key: "createNormalizer",
    value: function createNormalizer(prop, shorthand, suffix) {
      var normalizerCreator = this.getNormalizerCreator(shorthand);
      return normalizerCreator(prop, shorthand, suffix);
    }
  }]);
  return ShorthandsNormalizerFactory;
}();

var _default = new ShorthandsNormalizerFactory();

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNob3J0aGFuZHNOb3JtYWxpemVyRmFjdG9yeS5qcyJdLCJuYW1lcyI6WyJjcmVhdGVTaG9ydGhhbmQiLCJuYW1lIiwidHlwZSIsIl8iLCJpc1VuZGVmaW5lZCIsIlNJREVTIiwiQ09STkVSUyIsIkhPUklaT05UQUwiLCJWRVJUSUNBTCIsIkxFRlQiLCJSSUdIVCIsIlRPUCIsIkJPVFRPTSIsIlRPUF9SSUdIVCIsIkJPVFRPTV9SSUdIVCIsIlRPUF9MRUZUIiwiQk9UVE9NX0xFRlQiLCJTaG9ydGhhbmRzTm9ybWFsaXplckZhY3RvcnkiLCJjcmVhdGVOb3JtYWxpemVyc01hcCIsImNyZWF0ZUFsbFNpZGVzTm9ybWFsaXplciIsImNyZWF0ZUFsbENvcm5lcnNOb3JtYWxpemVyIiwiY3JlYXRlSG9yaXpvbnRhbFNpZGVzTm9ybWFsaXplciIsImNyZWF0ZVZlcnRpY2FsU2lkZXNOb3JtYWxpemVyIiwicHJvcCIsInNob3J0aGFuZCIsInN1ZmZpeCIsInZhbCIsIm5vcm1hbGl6ZXJDcmVhdG9yIiwiZ2V0Tm9ybWFsaXplckNyZWF0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQSxJQUFNQSxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUNDLElBQUQsRUFBT0MsSUFBUDtBQUFBLFNBQWlCO0FBQUVELElBQUFBLElBQUksRUFBSkEsSUFBRjtBQUFRQyxJQUFBQSxJQUFJLEVBQUVDLG1CQUFFQyxXQUFGLENBQWNGLElBQWQsSUFBc0JELElBQXRCLEdBQTZCQztBQUEzQyxHQUFqQjtBQUFBLENBQXhCOztBQUVPLElBQU1HLEtBQUssR0FBR0wsZUFBZSxDQUFDLE9BQUQsRUFBVSxFQUFWLENBQTdCOztBQUNBLElBQU1NLE9BQU8sR0FBR04sZUFBZSxDQUFDLFNBQUQsRUFBWSxFQUFaLENBQS9COztBQUNBLElBQU1PLFVBQVUsR0FBR1AsZUFBZSxDQUFDLFlBQUQsQ0FBbEM7O0FBQ0EsSUFBTVEsUUFBUSxHQUFHUixlQUFlLENBQUMsVUFBRCxDQUFoQzs7QUFFQSxJQUFNUyxJQUFJLEdBQUcsTUFBYjs7QUFDQSxJQUFNQyxLQUFLLEdBQUcsT0FBZDs7QUFDQSxJQUFNQyxHQUFHLEdBQUcsS0FBWjs7QUFDQSxJQUFNQyxNQUFNLEdBQUcsUUFBZjs7QUFDQSxJQUFNQyxTQUFTLEdBQUcsVUFBbEI7O0FBQ0EsSUFBTUMsWUFBWSxHQUFHLGFBQXJCOztBQUNBLElBQU1DLFFBQVEsR0FBRyxTQUFqQjs7QUFDQSxJQUFNQyxXQUFXLEdBQUcsWUFBcEI7OztJQU9EQywyQjtBQUNKLHlDQUFjO0FBQUE7O0FBQUE7QUFDWixTQUFLQyxvQkFBTCx3RkFDR2IsS0FBSyxDQUFDSixJQURULEVBQ2dCLEtBQUtrQix3QkFEckIsMkRBRUdiLE9BQU8sQ0FBQ0wsSUFGWCxFQUVrQixLQUFLbUIsMEJBRnZCLDJEQUdHYixVQUFVLENBQUNOLElBSGQsRUFHcUIsS0FBS29CLCtCQUgxQiwyREFJR2IsUUFBUSxDQUFDUCxJQUpaLEVBSW1CLEtBQUtxQiw2QkFKeEI7QUFNRDs7Ozs2Q0FFd0JDLEksRUFBTUMsUyxFQUF3QjtBQUFBLFVBQWJDLE1BQWEsdUVBQUosRUFBSTtBQUNyRCxhQUFPLFVBQUNDLEdBQUQ7QUFBQTs7QUFBQSxpRUFDSkgsSUFBSSxHQUFHZCxJQUFQLEdBQWNnQixNQURWLEVBQ21CQyxHQURuQiwwQ0FFSkgsSUFBSSxHQUFHYixLQUFQLEdBQWVlLE1BRlgsRUFFb0JDLEdBRnBCLDBDQUdKSCxJQUFJLEdBQUdaLEdBQVAsR0FBYWMsTUFIVCxFQUdrQkMsR0FIbEIsMENBSUpILElBQUksR0FBR1gsTUFBUCxHQUFnQmEsTUFKWixFQUlxQkMsR0FKckI7QUFBQSxPQUFQO0FBTUQ7OzsrQ0FFMEJILEksRUFBTUMsUyxFQUF3QjtBQUFBLFVBQWJDLE1BQWEsdUVBQUosRUFBSTtBQUN2RCxhQUFPLFVBQUNDLEdBQUQ7QUFBQTs7QUFBQSxtRUFDSkgsSUFBSSxHQUFHUCxXQUFQLEdBQXFCUyxNQURqQixFQUMwQkMsR0FEMUIsMkNBRUpILElBQUksR0FBR1QsWUFBUCxHQUFzQlcsTUFGbEIsRUFFMkJDLEdBRjNCLDJDQUdKSCxJQUFJLEdBQUdSLFFBQVAsR0FBa0JVLE1BSGQsRUFHdUJDLEdBSHZCLDJDQUlKSCxJQUFJLEdBQUdWLFNBQVAsR0FBbUJZLE1BSmYsRUFJd0JDLEdBSnhCO0FBQUEsT0FBUDtBQU1EOzs7b0RBRStCSCxJLEVBQU07QUFDcEMsYUFBTyxVQUFDRyxHQUFEO0FBQUE7O0FBQUEsbUVBQ0pILElBQUksR0FBR2QsSUFESCxFQUNVaUIsR0FEViwyQ0FFSkgsSUFBSSxHQUFHYixLQUZILEVBRVdnQixHQUZYO0FBQUEsT0FBUDtBQUlEOzs7a0RBRTZCSCxJLEVBQU07QUFDbEMsYUFBTyxVQUFDRyxHQUFEO0FBQUE7O0FBQUEsbUVBQ0pILElBQUksR0FBR1osR0FESCxFQUNTZSxHQURULDJDQUVKSCxJQUFJLEdBQUdYLE1BRkgsRUFFWWMsR0FGWjtBQUFBLE9BQVA7QUFJRDs7O3lDQUVvQkYsUyxFQUFXO0FBQzlCLGFBQU8sS0FBS04sb0JBQUwsQ0FBMEJNLFNBQVMsQ0FBQ3ZCLElBQXBDLENBQVA7QUFDRDs7O3FDQUVnQnNCLEksRUFBTUMsUyxFQUFXQyxNLEVBQVE7QUFDeEMsVUFBTUUsaUJBQWlCLEdBQUcsS0FBS0Msb0JBQUwsQ0FBMEJKLFNBQTFCLENBQTFCO0FBQ0EsYUFBT0csaUJBQWlCLENBQUNKLElBQUQsRUFBT0MsU0FBUCxFQUFrQkMsTUFBbEIsQ0FBeEI7QUFDRDs7Ozs7ZUFHWSxJQUFJUiwyQkFBSixFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcblxuY29uc3QgY3JlYXRlU2hvcnRoYW5kID0gKG5hbWUsIHR5cGUpID0+ICh7IG5hbWUsIHR5cGU6IF8uaXNVbmRlZmluZWQodHlwZSkgPyBuYW1lIDogdHlwZSB9KTtcblxuZXhwb3J0IGNvbnN0IFNJREVTID0gY3JlYXRlU2hvcnRoYW5kKCdTaWRlcycsICcnKTtcbmV4cG9ydCBjb25zdCBDT1JORVJTID0gY3JlYXRlU2hvcnRoYW5kKCdDb3JuZXJzJywgJycpO1xuZXhwb3J0IGNvbnN0IEhPUklaT05UQUwgPSBjcmVhdGVTaG9ydGhhbmQoJ0hvcml6b250YWwnKTtcbmV4cG9ydCBjb25zdCBWRVJUSUNBTCA9IGNyZWF0ZVNob3J0aGFuZCgnVmVydGljYWwnKTtcblxuZXhwb3J0IGNvbnN0IExFRlQgPSAnTGVmdCc7XG5leHBvcnQgY29uc3QgUklHSFQgPSAnUmlnaHQnO1xuZXhwb3J0IGNvbnN0IFRPUCA9ICdUb3AnO1xuZXhwb3J0IGNvbnN0IEJPVFRPTSA9ICdCb3R0b20nO1xuZXhwb3J0IGNvbnN0IFRPUF9SSUdIVCA9ICdUb3BSaWdodCc7XG5leHBvcnQgY29uc3QgQk9UVE9NX1JJR0hUID0gJ0JvdHRvbVJpZ2h0JztcbmV4cG9ydCBjb25zdCBUT1BfTEVGVCA9ICdUb3BMZWZ0JztcbmV4cG9ydCBjb25zdCBCT1RUT01fTEVGVCA9ICdCb3R0b21MZWZ0JztcblxuLy8gU2hvcnRoYW5kcyBub3JtYWxpemVycyBjcmVhdG9ycy5cbi8vIFRoaXMgY3JlYXRvcnMgcHJvdmlkZSBzdGFuZGFyZCBub3JtYWxpemVyIHVzZWQgaW4gbW9zdCBjYXNlcy5cbi8vIFdoZW4gc3R5bGUgcHJvcGVydHkgaGFzIGFueSBvZiB0aGlzIHNob3J0aGFuZHMsIHVzZSB0aGlzIGNyZWF0b3JzXG4vLyB0byBjcmVhdGUgc2hvcnRoYW5kIG5vcm1hbGl6ZXIuXG5cbmNsYXNzIFNob3J0aGFuZHNOb3JtYWxpemVyRmFjdG9yeSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuY3JlYXRlTm9ybWFsaXplcnNNYXAgPSB7XG4gICAgICBbU0lERVMubmFtZV06IHRoaXMuY3JlYXRlQWxsU2lkZXNOb3JtYWxpemVyLFxuICAgICAgW0NPUk5FUlMubmFtZV06IHRoaXMuY3JlYXRlQWxsQ29ybmVyc05vcm1hbGl6ZXIsXG4gICAgICBbSE9SSVpPTlRBTC5uYW1lXTogdGhpcy5jcmVhdGVIb3Jpem9udGFsU2lkZXNOb3JtYWxpemVyLFxuICAgICAgW1ZFUlRJQ0FMLm5hbWVdOiB0aGlzLmNyZWF0ZVZlcnRpY2FsU2lkZXNOb3JtYWxpemVyLFxuICAgIH07XG4gIH1cblxuICBjcmVhdGVBbGxTaWRlc05vcm1hbGl6ZXIocHJvcCwgc2hvcnRoYW5kLCBzdWZmaXggPSAnJykge1xuICAgIHJldHVybiAodmFsKSA9PiAoe1xuICAgICAgW3Byb3AgKyBMRUZUICsgc3VmZml4XTogdmFsLFxuICAgICAgW3Byb3AgKyBSSUdIVCArIHN1ZmZpeF06IHZhbCxcbiAgICAgIFtwcm9wICsgVE9QICsgc3VmZml4XTogdmFsLFxuICAgICAgW3Byb3AgKyBCT1RUT00gKyBzdWZmaXhdOiB2YWwsXG4gICAgfSk7XG4gIH1cblxuICBjcmVhdGVBbGxDb3JuZXJzTm9ybWFsaXplcihwcm9wLCBzaG9ydGhhbmQsIHN1ZmZpeCA9ICcnKSB7XG4gICAgcmV0dXJuICh2YWwpID0+ICh7XG4gICAgICBbcHJvcCArIEJPVFRPTV9MRUZUICsgc3VmZml4XTogdmFsLFxuICAgICAgW3Byb3AgKyBCT1RUT01fUklHSFQgKyBzdWZmaXhdOiB2YWwsXG4gICAgICBbcHJvcCArIFRPUF9MRUZUICsgc3VmZml4XTogdmFsLFxuICAgICAgW3Byb3AgKyBUT1BfUklHSFQgKyBzdWZmaXhdOiB2YWwsXG4gICAgfSk7XG4gIH1cblxuICBjcmVhdGVIb3Jpem9udGFsU2lkZXNOb3JtYWxpemVyKHByb3ApIHtcbiAgICByZXR1cm4gKHZhbCkgPT4gKHtcbiAgICAgIFtwcm9wICsgTEVGVF06IHZhbCxcbiAgICAgIFtwcm9wICsgUklHSFRdOiB2YWwsXG4gICAgfSk7XG4gIH1cblxuICBjcmVhdGVWZXJ0aWNhbFNpZGVzTm9ybWFsaXplcihwcm9wKSB7XG4gICAgcmV0dXJuICh2YWwpID0+ICh7XG4gICAgICBbcHJvcCArIFRPUF06IHZhbCxcbiAgICAgIFtwcm9wICsgQk9UVE9NXTogdmFsLFxuICAgIH0pO1xuICB9XG5cbiAgZ2V0Tm9ybWFsaXplckNyZWF0b3Ioc2hvcnRoYW5kKSB7XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRlTm9ybWFsaXplcnNNYXBbc2hvcnRoYW5kLm5hbWVdO1xuICB9XG5cbiAgY3JlYXRlTm9ybWFsaXplcihwcm9wLCBzaG9ydGhhbmQsIHN1ZmZpeCkge1xuICAgIGNvbnN0IG5vcm1hbGl6ZXJDcmVhdG9yID0gdGhpcy5nZXROb3JtYWxpemVyQ3JlYXRvcihzaG9ydGhhbmQpO1xuICAgIHJldHVybiBub3JtYWxpemVyQ3JlYXRvcihwcm9wLCBzaG9ydGhhbmQsIHN1ZmZpeCk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgbmV3IFNob3J0aGFuZHNOb3JtYWxpemVyRmFjdG9yeSgpO1xuIl19