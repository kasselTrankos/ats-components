{"version":3,"sources":["NativeAnimatedModule.js"],"names":["TurboModuleRegistry","get"],"mappings":"AAUA;;;;;;;;;AAGA;;eAwDgBA,mBAAmB,CAACC,GAApB,CAA8B,sBAA9B,C","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {TurboModule} from '../../TurboModule/RCTExport';\nimport * as TurboModuleRegistry from '../../TurboModule/TurboModuleRegistry';\n\ntype EndResult = {finished: boolean};\ntype EndCallback = (result: EndResult) => void;\n\nexport type EventMapping = {|\n  nativeEventPath: Array<string>,\n  animatedValueTag: ?number,\n|};\n\nexport type AnimatedNodeConfig = {|\n  // TODO: Type this with better enums.\n  type: string,\n|};\n\nexport type AnimatingNodeConfig = {|\n  // TODO: Type this with better enums.\n  type: string,\n|};\n\nexport interface Spec extends TurboModule {\n  +createAnimatedNode: (tag: ?number, config: AnimatedNodeConfig) => void;\n  +startListeningToAnimatedNodeValue: (tag: ?number) => void;\n  +stopListeningToAnimatedNodeValue: (tag: ?number) => void;\n  +connectAnimatedNodes: (parentTag: ?number, childTag: ?number) => void;\n  +disconnectAnimatedNodes: (parentTag: ?number, childTag: ?number) => void;\n  +startAnimatingNode: (\n    animationId: ?number,\n    nodeTag: ?number,\n    config: AnimatingNodeConfig,\n    endCallback: EndCallback,\n  ) => void;\n  +stopAnimation: (animationId: ?number) => void;\n  +setAnimatedNodeValue: (nodeTag: ?number, value: ?number) => void;\n  +setAnimatedNodeOffset: (nodeTag: ?number, offset: ?number) => void;\n  +flattenAnimatedNodeOffset: (nodeTag: ?number) => void;\n  +extractAnimatedNodeOffset: (nodeTag: ?number) => void;\n  +connectAnimatedNodeToView: (nodeTag: ?number, viewTag: ?number) => void;\n  +disconnectAnimatedNodeFromView: (nodeTag: ?number, viewTag: ?number) => void;\n  +dropAnimatedNode: (tag: ?number) => void;\n  +addAnimatedEventToView: (\n    viewTag: ?number,\n    eventName: string,\n    eventMapping: EventMapping,\n  ) => void;\n  +removeAnimatedEventFromView: (\n    viewTag: ?number,\n    eventName: string,\n    animatedNodeTag: ?number,\n  ) => void;\n\n  // Events\n  +addListener: (eventName: string) => void;\n  +removeListeners: (count: number) => void;\n}\n\nexport default (TurboModuleRegistry.get<Spec>('NativeAnimatedModule'): ?Spec);\n"]}